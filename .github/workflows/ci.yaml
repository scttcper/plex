name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PLEXAPI_AUTH_SERVER_BASEURL: http://127.0.0.1:32400
      PLEX_CONTAINER: plexinc/pms-docker
      PLEX_CONTAINER_TAG: latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: install
        run: pnpm install

      - name: lint
        run: pnpm run lint

      - name: Get PMS Docker image digest
        id: docker-digest
        run: |
          mkdir -p ~/.cache/docker/${{ env.PLEX_CONTAINER }}
          echo "Image: ${{ env.PLEX_CONTAINER }}"
          echo "Tag: ${{ env.PLEX_CONTAINER_TAG }}"
          token=$(curl \
            --silent \
            "https://auth.docker.io/token?scope=repository:${{ env.PLEX_CONTAINER }}:pull&service=registry.docker.io" \
            | jq -r '.token')
          digest=$(curl \
            --silent \
            --header "Accept: application/vnd.docker.distribution.manifest.v2+json" \
            --header "Authorization: Bearer $token" \
            "https://registry-1.docker.io/v2/${{ env.PLEX_CONTAINER }}/manifests/${{ env.PLEX_CONTAINER_TAG }}" \
            | jq -r '.config.digest')
          echo "Digest: $digest"
          echo ::set-output name=digest::$digest

      - name: Cache PMS Docker image
        id: docker-cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/docker/plexinc
          key: ${{ runner.os }}-docker-pms-${{ steps.docker-digest.outputs.digest }}

      - name: Pull PMS Docker image
        if: steps.docker-cache.outputs.cache-hit != 'true'
        run: |
          docker pull ${{ env.PLEX_CONTAINER }}:${{ env.PLEX_CONTAINER_TAG }}
          docker save -o ~/.cache/docker/${{ env.PLEX_CONTAINER }}-${{ env.PLEX_CONTAINER_TAG }}.tar ${{ env.PLEX_CONTAINER }}:${{ env.PLEX_CONTAINER_TAG }}
          echo "Saved image: ${{ env.PLEX_CONTAINER }}:${{ env.PLEX_CONTAINER_TAG }}"

      - name: Load PMS Docker image
        if: steps.docker-cache.outputs.cache-hit == 'true'
        run: |
          docker load -i ~/.cache/docker/${{ env.PLEX_CONTAINER }}-${{ env.PLEX_CONTAINER_TAG }}.tar

      - name: Set Plex credentials
        run: |
          echo "PLEXAPI_AUTH_SERVER_TOKEN=${{ secrets.PLEXAPI_AUTH_SERVER_TOKEN }}" >> $GITHUB_ENV

      - name: Bootstrap Plex server
        run: pnpm run bootstraptest -- \
            --advertise-ip 127.0.0.1 \
            --docker-tag ${{ env.PLEX_CONTAINER_TAG }} \

      - name: Unlink PMS from MyPlex account
        uses: webiny/action-post-run@3.1.0
        with:
          run: pnpm run teardowntest

      - name: test
        run: pnpm run test:ci

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_name == 'master'
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v3
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: install
        run: pnpm install

      - name: release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
